import cv2, mediapipe as mp
import numpy as np
import matplotlib.pyplot as plt
from collections import deque

mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils
cap = cv2.VideoCapture(0)

buffer_size = 200
x_history = deque(maxlen=buffer_size)
y_history = deque(maxlen=buffer_size)

with mp_hands.Hands(
    min_detection_confidence=0.5,
    min_tracking_confidence=0.5,
    max_num_hands=1) as hands:

    while True:
        ret, frame = cap.read()
        if not ret:
            break

        img = cv2.flip(frame, 1)
        rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        res = hands.process(rgb)

        if res.multi_hand_landmarks:
            lm = res.multi_hand_landmarks[0].landmark

            x, y = lm[8].x, lm[8].y

            x_history.append(x)
            y_history.append(y)

            mp_drawing.draw_landmarks(img, res.multi_hand_landmarks[0], mp_hands.HAND_CONNECTIONS)
            cv2.putText(img, "Tracking finger", (20,40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0,255,0),2)

        else:
            cv2.putText(img, "No hand", (20,40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0,0,255),2)

        cv2.imshow("Tremor Detection", img)

        if cv2.waitKey(1) & 0xFF == 27:  
            break

cap.release()
cv2.destroyAllWindows()

plt.plot(x_history, label="X")
plt.plot(y_history, label="Y")
plt.title("Hand Tremor Tracking (last 200 frames)")
plt.xlabel("Frame")
plt.ylabel("Position (normalized)")
plt.legend()
plt.show()
